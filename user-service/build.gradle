plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'jvm-test-suite' // Add the jvm-test-suite plugin for managing tests
}

group = 'com.physiotherapy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    
    integrationTestImplementation.extendsFrom(testImplementation)
    integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // JWT for authentication (latest stable version)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6' // For JSON parsing if required

    // Google Cloud SQL Socket Factory (latest version)
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.20.1'

    // PostgreSQL driver (updated version)
    implementation 'org.postgresql:postgresql:42.3.1'

    // Lombok (to reduce boilerplate code)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Servlet API
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

    // Spring Boot Test dependencies for unit tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine' // Ensure JUnit 5 is used
    }
    testImplementation 'com.h2database:h2'
    testImplementation 'org.mockito:mockito-core:5.13.0'

    // Dependencies for integration tests
    integrationTestImplementation 'org.testcontainers:junit-jupiter'
    integrationTestImplementation 'org.testcontainers:postgresql'
}

testing {
    suites {
        // Unit test suite
        test {
            useJUnitJupiter()

            dependencies {
                implementation 'org.springframework.boot:spring-boot-starter-test'
                implementation 'com.h2database:h2'
                implementation 'org.mockito:mockito-core:5.13.0'
            }

            targets {
                all {
                    tasks.named('test') {
                        // Use 'test' profile for unit tests
                        systemProperty 'spring.profiles.active', 'test'
                    }
                }
            }
        }

        // Integration test suite
        register('integrationTest', JvmTestSuite) {
            useJUnitJupiter()

            dependencies {
                implementation 'org.springframework.boot:spring-boot-starter-test'
                implementation 'org.testcontainers:junit-jupiter'
                implementation 'org.testcontainers:postgresql'
            }

            sources {
                java {
                    setSrcDirs(['src/integrationTest/java']) // Use the integrationTest directory for integration tests
                }
                resources {
                    setSrcDirs(['src/integrationTest/resources']) // Resources for integration tests
                }
            }

            targets {
                all {
                    tasks.named('integrationTest') {
                        // Use 'integration' profile for integration tests
                        systemProperty 'spring.profiles.active', 'integration'
                    }
                }
            }
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    integrationTest {
        java {
            srcDirs = ['src/integrationTest/java'] // Separate integration test source set
        }
        resources {
            srcDirs = ['src/integrationTest/resources'] // Separate integration test resources
        }
        // Include main source set in integration test classpath
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

// No need to define an extra integrationTest task, handled by testing.suites

tasks.check {
    dependsOn(tasks.named('integrationTest'))
}
